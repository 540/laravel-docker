C:37:"PHPUnit\Runner\DefaultTestResultCache":6590:{a:2:{s:7:"defects";a:32:{s:92:"Tests\Unit\Controllers\OpenWalletControllerTest::getErrorMessageWhenAInvalidUserIdIsReceived";i:3;s:89:"Tests\Unit\Controllers\OpenWalletControllerTest::getsSuccessfulOperationWhenUserIdIsFound";i:4;s:93:"Tests\Unit\Controllers\OpenWalletControllerTest::getsHttpNotFoundWhenAInvalidUserIdIsReceived";i:3;s:92:"Tests\Unit\Controllers\OpenWalletControllerTest::getsHttpBadRequestWhenUserIdFieldIsNotFound";i:4;s:100:"Tests\Services\OpenWalletService\OpenWalletServiceTest::getsHttpNotFoundWhenAInvalidUserIdIsReceived";i:4;s:96:"Tests\Services\OpenWalletService\OpenWalletServiceTest::getsSuccessfulOperationWhenUserIdIsFound";i:4;s:77:"Tests\Feature\Wallet\OpenWalletTest::getsSuccessfulOperationWhenUserIdIsFound";i:4;s:81:"Tests\Feature\Wallet\OpenWalletTest::getsHttpNotFoundWhenAInvalidUserIdIsReceived";i:4;s:80:"Tests\Feature\Wallet\OpenWalletTest::getsHttpBadRequestWhenUserIdFieldIsNotFound";i:3;s:86:"Tests\Services\OpenWalletService\OpenWalletServiceTest::getsErrorWhenAUserDoesNotExist";i:3;s:74:"Tests\Integration\DataSources\EloquentUserDataSourceTest::findsUserByEmail";i:4;s:88:"Tests\Integration\DataSources\EloquentUserDataSourceTest::noUserIsFoundForTheGivenEmailI";i:4;s:89:"Tests\Integration\DataSources\EloquentUserDataSourceTest::noUserIsFoundForTheGivenEmailII";i:4;s:93:"Tests\Integration\DataSources\EloquentWalletCoinDataSourceTest::noWalletFoundForGivenWalletId";i:4;s:106:"Tests\Integration\Controller\CoinBuyerControllerTest::getsHttpBadRequestWhenAInvalidRequestFieldIsReceived";i:4;s:91:"Tests\Integration\Controller\CoinBuyerControllerTest::getsHttpNotFoundWhenWalletWasNotFound";i:4;s:102:"Tests\Integration\Controller\CoinBuyerControllerTest::getsSuccessfulOperationWhenWalletAndCoinAreFound";i:4;s:104:"Tests\Integration\Controller\CoinBuyerControllerTest::getsSuccessfulOperationWhenWalletIsFoundButNotCoin";i:4;s:61:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::coinIsFound";i:4;s:64:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::coinIsNotFound";i:4;s:66:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::walletIsNotFound";i:4;s:69:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::wrongCoinIdProvided";i:4;s:66:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::cannotUpdateCoin";i:4;s:76:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::coinIsNotFoundAndCreatesIt";i:4;s:79:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::coinIsFoundAndCannotBeUpdated";i:4;s:72:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::coinIsFoundItIsUpdated";i:4;s:88:"Tests\Integration\DataSources\Database\EloquentCoinDataSourceTest::coinHasNotBeenCreated";i:4;s:88:"Tests\Integration\DataSources\Database\EloquentCoinDataSourceTest::coinHasNotBeenUpdated";i:4;s:111:"Tests\Integration\DataSources\Database\EloquentCoinDataSourceTest::coinHasNotBeenCreatedCauseWalletDoesNotExist";i:4;s:93:"Tests\Integration\Controller\OpenWalletControllerTest::noWalletIsCreatedGivenAnExistentUserId";i:4;s:105:"Tests\Integration\Controller\GetWalletBalanceControllerTest::positiveBalanceIsObtainedGivenAValidWalletId";i:4;s:88:"Tests\Unit\Controllers\SellCoinControllerTest::getsHttpBadRequestIfCoinIdFieldIsNotFound";i:4;}s:5:"times";a:34:{s:40:"Tests\Feature\ExampleTest::testBasicTest";d:5.332;s:37:"Tests\Unit\ExampleTest::testBasicTest";d:0.125;s:92:"Tests\Unit\Controllers\OpenWalletControllerTest::getErrorMessageWhenAInvalidUserIdIsReceived";d:2.8;s:93:"Tests\Unit\Controllers\OpenWalletControllerTest::getsHttpNotFoundWhenAInvalidUserIdIsReceived";d:4.024;s:92:"Tests\Unit\Controllers\OpenWalletControllerTest::getsHttpBadRequestWhenUserIdFieldIsNotFound";d:0.127;s:89:"Tests\Unit\Controllers\OpenWalletControllerTest::getsSuccessfulOperationWhenUserIdIsFound";d:0.117;s:100:"Tests\Services\OpenWalletService\OpenWalletServiceTest::getsHttpNotFoundWhenAInvalidUserIdIsReceived";d:0.696;s:86:"Tests\Services\OpenWalletService\OpenWalletServiceTest::getsErrorWhenAUserDoesNotExist";d:0.765;s:96:"Tests\Services\OpenWalletService\OpenWalletServiceTest::getsSuccessfulOperationWhenUserIdIsFound";d:0.788;s:77:"Tests\Feature\Wallet\OpenWalletTest::getsSuccessfulOperationWhenUserIdIsFound";d:20.721;s:81:"Tests\Feature\Wallet\OpenWalletTest::getsHttpNotFoundWhenAInvalidUserIdIsReceived";d:23.634;s:80:"Tests\Feature\Wallet\OpenWalletTest::getsHttpBadRequestWhenUserIdFieldIsNotFound";d:0.099;s:74:"Tests\Integration\DataSources\EloquentUserDataSourceTest::findsUserByEmail";d:24.741;s:88:"Tests\Integration\DataSources\EloquentUserDataSourceTest::noUserIsFoundForTheGivenEmailI";d:20.128;s:89:"Tests\Integration\DataSources\EloquentUserDataSourceTest::noUserIsFoundForTheGivenEmailII";d:20.128;s:93:"Tests\Integration\DataSources\EloquentWalletCoinDataSourceTest::noWalletFoundForGivenWalletId";d:23.867;s:106:"Tests\Integration\Controller\CoinBuyerControllerTest::getsHttpBadRequestWhenAInvalidRequestFieldIsReceived";d:24.81;s:91:"Tests\Integration\Controller\CoinBuyerControllerTest::getsHttpNotFoundWhenWalletWasNotFound";d:0;s:102:"Tests\Integration\Controller\CoinBuyerControllerTest::getsSuccessfulOperationWhenWalletAndCoinAreFound";d:24.979;s:104:"Tests\Integration\Controller\CoinBuyerControllerTest::getsSuccessfulOperationWhenWalletIsFoundButNotCoin";d:27.195;s:61:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::coinIsFound";d:0.007;s:64:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::coinIsNotFound";d:1.462;s:66:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::walletIsNotFound";d:0.006;s:69:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::wrongCoinIdProvided";d:0.008;s:66:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::cannotUpdateCoin";d:0.007;s:76:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::coinIsNotFoundAndCreatesIt";d:27.056;s:79:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::coinIsFoundAndCannotBeUpdated";d:25.034;s:72:"Tests\Unit\Services\CoinBuy\CoinBuyerServiceTest::coinIsFoundItIsUpdated";d:24.9;s:88:"Tests\Integration\DataSources\Database\EloquentCoinDataSourceTest::coinHasNotBeenCreated";d:24.484;s:88:"Tests\Integration\DataSources\Database\EloquentCoinDataSourceTest::coinHasNotBeenUpdated";d:26.114;s:111:"Tests\Integration\DataSources\Database\EloquentCoinDataSourceTest::coinHasNotBeenCreatedCauseWalletDoesNotExist";d:25.907;s:93:"Tests\Integration\Controller\OpenWalletControllerTest::noWalletIsCreatedGivenAnExistentUserId";d:27.909;s:105:"Tests\Integration\Controller\GetWalletBalanceControllerTest::positiveBalanceIsObtainedGivenAValidWalletId";d:29.196;s:88:"Tests\Unit\Controllers\SellCoinControllerTest::getsHttpBadRequestIfCoinIdFieldIsNotFound";d:27.879;}}}