#!/bin/sh

STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".php{0,1}$")

if [[ "$STAGED_FILES" = "" ]]; then
  exit 0
fi

PASS=true

echo "\nValidating PHP sintax errors:\n"

# Checking php linter
for FILE in $STAGED_FILES
do
  if ! php -l "$FILE"; then
    echo "\n\t\033[41mPHP Linter Failed: $FILE\033[0m\n"
    PASS=false
  fi
done

if ! $PASS; then
  echo "\033[41mCOMMIT FAILED:\033[0m Your commit contains files that have syntax errors. Please fix the syntax errors and try again.\n"
  exit 1
fi

echo "\n\033[32mNo PHP syntax errors detected!\033[0m\n"

echo "\n\nValidating PHPCS:"

# Check for phpcs
which ./vendor/bin/phpcs &> /dev/null
if [[ "$?" == 1 ]]; then
  echo "\n\t\033[41mPlease install PHPCS\033[0m"
  exit 1
fi

# Check for phpcbf
which ./vendor/bin/phpcbf &> /dev/null
if [[ "$?" == 1 ]]; then
  echo "\n\t\033[41mPlease install PHPCBF\033[0m"
  exit 1
fi

RULESET=./phpcs.xml

for FILE in $STAGED_FILES
do
  ./vendor/bin/phpcs --standard="$RULESET" "$FILE"

  if [[ "$?" == 0 ]]; then
    echo "\t\033[32mPHPCS Passed: $FILE\033[0m"
  else
    echo "\t\033[41mPHPCS Failed: $FILE\033[0m"
    PASS=false
  fi
done

echo "\nPHPCS validation completed!\n"

if ! $PASS; then
  echo "\033[41mCOMMIT FAILED:\033[0m Your commit contains files that should pass PHPCS but do not. Please fix the PHPCS errors and try again.\n"
  exit 1
fi

echo "\n\nValidating PHP Unit Tests:\n"

./vendor/bin/phpunit --configuration src/phpunit.xml

if [[ "$?" == 0 ]]; then
  echo "\n\033[32mPHP Unit Tests Passed\033[0m"
else
  echo "\n\033[41mPHP Unit Tests Failed\033[0m"
  PASS=false
fi

echo "\nPHP Unit Tests validation completed!"

if ! $PASS; then
  echo "\n\033[41mCOMMIT FAILED:\033[0m Your commit files should pass PHP Unit Tests but do not. Please fix the PHP Unit TestsZ errors and try again.\n"
  exit 1
else
  echo "\n\033[42mCOMMIT SUCCEEDED\033[0m\n"
fi

exit $?
